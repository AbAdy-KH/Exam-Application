// <auto-generated />
using System;
using ExamApp.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamApp.Persistence.Migrations
{
    [DbContext(typeof(ExamAppDbContext))]
    partial class ExamAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamApp.Domain.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamResultId")
                        .HasColumnType("int");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Answers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            ExamResultId = 1,
                            OptionId = 1,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            ExamResultId = 1,
                            OptionId = 4,
                            QuestionId = 2
                        });
                });

            modelBuilder.Entity("ExamApp.Domain.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Exams", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            Description = "---",
                            IsVisible = true,
                            Text = "Programming 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            Description = "---",
                            IsVisible = false,
                            Text = "Calculase"
                        });
                });

            modelBuilder.Entity("ExamApp.Domain.ExamResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<double?>("Mark")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExamResults", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            ExamId = 1,
                            Mark = 85.0
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            ExamId = 2,
                            Mark = 90.0
                        });
                });

            modelBuilder.Entity("ExamApp.Domain.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTrue")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            IsTrue = true,
                            QuestionId = 1,
                            Text = "Paris"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            IsTrue = false,
                            QuestionId = 1,
                            Text = "London"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            IsTrue = true,
                            QuestionId = 2,
                            Text = "4"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "1",
                            IsTrue = false,
                            QuestionId = 2,
                            Text = "5"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "1",
                            IsTrue = true,
                            QuestionId = 3,
                            Text = "Blue"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "1",
                            IsTrue = false,
                            QuestionId = 3,
                            Text = "Red"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "1",
                            IsTrue = true,
                            QuestionId = 4,
                            Text = "Einstein"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "1",
                            IsTrue = false,
                            QuestionId = 4,
                            Text = "Newton"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "1",
                            IsTrue = true,
                            QuestionId = 5,
                            Text = "H2O"
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "1",
                            IsTrue = false,
                            QuestionId = 5,
                            Text = "CO2"
                        });
                });

            modelBuilder.Entity("ExamApp.Domain.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<double?>("Grade")
                        .HasColumnType("float");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("Questions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            ExamId = 1,
                            Grade = 1.0,
                            Text = "What is the capital of France?"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            ExamId = 1,
                            Grade = 1.0,
                            Text = "What is the largest planet in our solar system?"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            ExamId = 2,
                            Grade = 1.0,
                            Text = "What is the derivative of x^2?"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "1",
                            ExamId = 2,
                            Grade = 1.0,
                            Text = "What is the integral of 1/x?"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "1",
                            ExamId = 1,
                            Grade = 1.0,
                            Text = "What is the capital of Germany?"
                        });
                });

            modelBuilder.Entity("ExamApp.Domain.Option", b =>
                {
                    b.HasOne("ExamApp.Domain.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ExamApp.Domain.Question", b =>
                {
                    b.HasOne("ExamApp.Domain.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("ExamApp.Domain.Exam", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("ExamApp.Domain.Question", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
